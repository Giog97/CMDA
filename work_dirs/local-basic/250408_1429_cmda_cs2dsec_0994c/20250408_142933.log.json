{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Build cuda_12.2.r12.2/compiler.33191640_0\nGCC: gcc (conda-forge gcc 8.5.0-19) 8.5.0\nPyTorch: 1.7.1+cu110\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2+cu110\nOpenCV: 4.4.0\nMMCV: 1.3.7\nMMCV Compiler: GCC 11.4\nMMCV CUDA Compiler: 12.2\nMMSegmentation: 0.16.0+9d25129", "seed": 0, "exp_name": "250408_1429_cmda_cs2dsec_0994c", "mmseg_version": "0.16.0+9d25129", "config": "log_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\nnorm_cfg = dict(type='BN', requires_grad=True)\nfind_unused_parameters = True\nmodel = dict(\n    type='FusionEncoderDecoder',\n    pretrained='pretrained/mit_b5.pth',\n    backbone=dict(type='mit_b5', style='pytorch'),\n    decode_head=dict(\n        type='DAFormerHeadFusion',\n        in_channels=[64, 128, 320, 512],\n        in_index=[0, 1, 2, 3],\n        channels=256,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        align_corners=False,\n        decoder_params=dict(\n            embed_dims=256,\n            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            fusion_cfg=dict(\n                type='aspp',\n                sep=True,\n                dilations=(1, 6, 12, 18),\n                pool=False,\n                act_cfg=dict(type='ReLU'),\n                norm_cfg=dict(type='BN', requires_grad=True)),\n            train_type='cs2dsec_image+events_together',\n            share_decoder=True,\n            half_share_decoder=False),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    train_cfg=dict(\n        work_dir='work_dirs/local-basic/250408_1429_cmda_cs2dsec_0994c'),\n    test_cfg=dict(mode='whole'),\n    backbone_image=dict(type='mit_b5', style='pytorch', in_chans=3),\n    backbone_events=dict(type='mit_b5', style='pytorch', in_chans=3),\n    fusion_module=dict(type='AttentionAvgFusion'),\n    fusion_isr_module=dict(type=''),\n    train_type='cs2dsec_image+events_together')\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='UDADataset',\n        source=dict(\n            type='CityscapesICDataset',\n            image_resize_size=(1024, 512),\n            image_crop_size=[512, 512],\n            dataset_path='/home/gstefanini/CMDA/data/cityscapes/',\n            outputs={'img_time_res', 'label', 'img_self_res', 'image'},\n            return_GI_or_IC='image_change',\n            shift_type='random',\n            isr_noise=False,\n            isr_cow_mask=False,\n            high_resolution_isr=False,\n            random_flare=None,\n            cs_isr_data_type='day',\n            shift_3_channel=False,\n            isr_parms=''),\n        target=dict(\n            type='DSECDataset',\n            dataset_txt_path='./night_dataset_warp.txt',\n            crop_size=[400, 400],\n            after_crop_resize_size=[512, 512],\n            outputs={'events_vg', 'warp_image', 'warp_img_self_res'},\n            events_bins=1,\n            isr_type='real_time',\n            shift_type='random',\n            isr_parms=dict(\n                val_range=[0.01, 1.01],\n                _threshold=0.005,\n                _clip_range=0.1,\n                shift_pixel=1),\n            events_clip_range=None,\n            events_bins_5_avg_1=False,\n            image_change_range=1),\n        source_json_root='/home/gstefanini/CMDA/data/cityscapes/',\n        rare_class_sampling=dict(\n            min_pixels=3000, class_temp=0.01, min_crop_ratio=0.5)),\n    val=dict(\n        type='DSECDataset',\n        dataset_txt_path='./night_test_dataset_warp.txt',\n        outputs=['events_vg', 'warp_image', 'label', 'img_metas'],\n        events_bins=1,\n        events_clip_range=None,\n        events_bins_5_avg_1=False,\n        image_change_range=1),\n    test=dict(\n        type='DSECDataset',\n        dataset_txt_path='./night_test_dataset_warp.txt',\n        outputs=['events_vg', 'warp_image', 'label', 'img_metas'],\n        events_bins=1,\n        events_clip_range=None,\n        events_bins_5_avg_1=False,\n        image_change_range=1))\nuda = dict(\n    type='DACS',\n    alpha=0.999,\n    pseudo_threshold=0.968,\n    pseudo_weight_ignore_top=0,\n    pseudo_weight_ignore_bottom=0,\n    imnet_feature_dist_lambda=0,\n    imnet_feature_dist_classes=[6, 7, 11, 12, 13, 14, 15, 16, 17, 18],\n    imnet_feature_dist_scale_min_ratio=0.75,\n    mix='class',\n    blur=True,\n    color_jitter_strength=0.2,\n    color_jitter_probability=0.2,\n    debug_img_interval=500,\n    print_grad_magnitude=False,\n    cyclegan_itrd2en_path='./pretrained/cityscapes_ICD_to_dsec_EN.pth',\n    img_self_res_reg='no',\n    train_type='cs2dsec_image+events_together',\n    forward_cfg=dict(\n        loss_weight=dict(image=0.5, events=0.5, fusion=0.5, img_self_res=0.25),\n        gradual_rate=0.0,\n        lambda_feature_consistency=0.25),\n    mixed_image_to_mixed_isr=True,\n    random_choice_thres='0.5',\n    shift_type='random',\n    isr_parms=dict(\n        val_range=[0.01, 1.01],\n        _threshold=0.005,\n        _clip_range=0.1,\n        shift_pixel=1),\n    isr_mix_aug=False,\n    sky_mask=None,\n    deflare_aug=False,\n    isr_edge=False,\n    lambda_isr_features=-1,\n    isr_edge_class_weight=-1,\n    isr_noise_dacs_type='',\n    shift_3_channel=False,\n    isr_no_fusion=False,\n    lambda_feature_consistency=-1,\n    isr_another_fusion=False,\n    without_events=False,\n    without_isd=False,\n    fuse_both_ice_and_e=False,\n    model=dict(\n        type='FusionEncoderDecoder',\n        pretrained='pretrained/mit_b5.pth',\n        backbone=dict(type='mit_b5', style='pytorch'),\n        decode_head=dict(\n            type='DAFormerHeadFusion',\n            in_channels=[64, 128, 320, 512],\n            in_index=[0, 1, 2, 3],\n            channels=256,\n            dropout_ratio=0.1,\n            num_classes=19,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            align_corners=False,\n            decoder_params=dict(\n                embed_dims=256,\n                embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                fusion_cfg=dict(\n                    type='aspp',\n                    sep=True,\n                    dilations=(1, 6, 12, 18),\n                    pool=False,\n                    act_cfg=dict(type='ReLU'),\n                    norm_cfg=dict(type='BN', requires_grad=True)),\n                train_type='cs2dsec_image+events_together',\n                share_decoder=True,\n                half_share_decoder=False),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n        train_cfg=dict(\n            work_dir='work_dirs/local-basic/250408_1429_cmda_cs2dsec_0994c'),\n        test_cfg=dict(mode='whole'),\n        backbone_image=dict(type='mit_b5', style='pytorch', in_chans=3),\n        backbone_events=dict(type='mit_b5', style='pytorch', in_chans=3),\n        fusion_module=dict(type='AttentionAvgFusion'),\n        fusion_isr_module=dict(type=''),\n        train_type='cs2dsec_image+events_together'),\n    max_iters=40000)\nuse_ddp_wrapper = True\noptimizer = dict(\n    type='AdamW',\n    lr=6e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.01,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            head=dict(lr_mult=10.0),\n            pos_block=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = None\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nseed = 0\npretrained_type = 'mit_b5'\nevents_bins = 1\ntrain_type = 'cs2dsec_image+events_together'\nn_gpus = 1\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=40000, max_keep_ckpts=1)\nevaluation = dict(interval=4000, metric='mIoU')\nname = '250408_1429_cmda_cs2dsec_0994c'\nexp = 'basic'\nname_dataset = 'cityscapes_day2dsec_night'\nname_architecture = 'daformer_sepaspp_mitb5_events'\nname_encoder = 'mitb5'\nname_decoder = 'daformer_sepaspp_events'\nname_uda = 'dacs_a999_rcs0.01_cpl'\nname_opt = 'adamw_6e-05_pmTrue_poly10warm_1x2_40k'\nwork_dir = 'work_dirs/local-basic/250408_1429_cmda_cs2dsec_0994c'\ngit_rev = '9d251299a00e014f0846575a8eb783ae3176f60f'\ngpu_ids = range(0, 1)\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
